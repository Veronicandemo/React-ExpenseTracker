{"ast":null,"code":"var _jsxFileName = \"/Users/veronica/Downloads/01-starting-setup/src/components/NewExpnses/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  // We are storing strings all the time  and not a number here for the amount, for example,\n  // because by default, whenever you listen to the change event for an input, if you read the value of that input element,\n  // it'll always be a string.  Even if it stores a number\n  // it will be a number as a string and the same for the date.\n  // So we always get a string here.\n  // That's why we also initialize all States with a string.\n  // opt\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // for option2\n  // const [userInput, setUserInput] = ({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate:'',\n  // })\n\n  const titleChangeHandler = event => {\n    // option1\n    setEnteredTitle(event.target.value);\n    //        option2\n    // setUserInput({ //Instead of this do the below\n    //     ...userInput,\n    //     enteredTitle: event.target.value\n    // })\n    //        option3\n    // setUserInput((prevousState) => {\n    //     return {  \n    //         ...prevousState,\n    //         enteredTitle: event.target.value\n    //     }\n\n    // })\n  };\n\n  const amountChangeHandler = event => {\n    // Option1\n    setEnteredAmount(event.target.value);\n    // Option2\n    // setUserInput({\n    //     ...userInput, \n    //     enteredAmount: event.target.value\n    // })\n    // Option3\n    //     setUserInput((prevousState) => {\n    //         return {  \n    //             ...prevousState,\n    //             enteredAmount: event.target.value\n    //         }\n    // })\n  };\n\n  const dateChangeHandler = event => {\n    // Option1\n    setEnteredDate(event.target.value);\n    // Option2\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value\n    // })\n    // Option3\n    //     setUserInput((prevousState) => {\n    //         return {  \n    //             ...prevousState,\n    //             enteredDate: event.target.value\n    //         }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","step","max","_c","$RefreshReg$"],"sources":["/Users/veronica/Downloads/01-starting-setup/src/components/NewExpnses/ExpenseForm.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport './ExpenseForm.css'\nconst ExpenseForm =()=>{\n    // We are storing strings all the time  and not a number here for the amount, for example,\n    // because by default, whenever you listen to the change event for an input, if you read the value of that input element,\n    // it'll always be a string.  Even if it stores a number\n    // it will be a number as a string and the same for the date.\n    // So we always get a string here.\n    // That's why we also initialize all States with a string.\n    // opt\n   const [enteredTitle, setEnteredTitle] = useState('')\n   const [enteredAmount, setEnteredAmount] = useState('')\n   const [enteredDate, setEnteredDate] = useState('')\n// for option2\n// const [userInput, setUserInput] = ({\n//     enteredTitle: '',\n//     enteredAmount: '',\n//     enteredDate:'',\n// })\n\n    const titleChangeHandler = (event) =>{\n        // option1\n        setEnteredTitle(event.target.value)\n        //        option2\n        // setUserInput({ //Instead of this do the below\n        //     ...userInput,\n        //     enteredTitle: event.target.value\n        // })\n        //        option3\n        // setUserInput((prevousState) => {\n        //     return {  \n        //         ...prevousState,\n        //         enteredTitle: event.target.value\n        //     }\n\n        // })\n    }\n    const amountChangeHandler = (event) =>{\n        // Option1\n        setEnteredAmount(event.target.value)\n        // Option2\n        // setUserInput({\n        //     ...userInput, \n        //     enteredAmount: event.target.value\n        // })\n        // Option3\n    //     setUserInput((prevousState) => {\n    //         return {  \n    //             ...prevousState,\n    //             enteredAmount: event.target.value\n    //         }\n    // })\n}\n    const dateChangeHandler = (event) =>{\n        // Option1\n        setEnteredDate(event.target.value)\n        // Option2\n        // setUserInput({\n        //     ...userInput,\n        //     enteredDate: event.target.value\n        // })\n        // Option3\n    //     setUserInput((prevousState) => {\n    //         return {  \n    //             ...prevousState,\n    //             enteredDate: event.target.value\n    //         }\n    // })\n}\n    return (\n        <form>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label >Title</label>\n                    <input type=\"text\" onChange={titleChangeHandler}/>\n                    </div>\n                    <div className=\"new-expense__control\">\n                        <label>Amount</label>\n                        <input type=\"number\" min=\"0.01\" step=\"0.01\"\n                        onChange={amountChangeHandler}/>\n                        </div>\n                        <div className=\"new-expense__control\">\n                            <label>Date</label>\n                            <input type=\"date\" min='2019-01-01' max='2022-12-31'onChange={dateChangeHandler}/>\n                            </div>\n                            </div>\n                            <div className=\"new-expense__actions\">\n                                <button type=\"submit\">Add Expense</button>\n                            </div>\n        </form>\n    )\n}\nexport default ExpenseForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}